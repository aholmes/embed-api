Ext.data.JsonP.global({"parentMixins":[],"alternateClassNames":[],"statics":{"cfg":[],"method":[],"property":[],"css_var":[],"event":[],"css_mixin":[]},"tagname":"class","html_meta":{},"mixins":[],"requires":[],"files":[{"href":"","filename":""}],"meta":{},"members":{"cfg":[],"method":[{"owner":"global","tagname":"method","meta":{},"name":"isElement","id":"method-isElement"},{"owner":"global","tagname":"method","meta":{},"name":"playerInit","id":"method-playerInit"}],"property":[{"owner":"global","tagname":"property","meta":{},"name":"","id":"property-"}],"css_var":[],"event":[],"css_mixin":[]},"html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/reporting.html#global-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-' class='name expandable'></a><span> : Object</span></div><div class='description'><div class='short'>Trying something new here. ...</div><div class='long'><p>Trying something new here. A way to keep the API clean for utility methods specific to things like reporting.\nThese modules are on a player, as opposed to the modules on MTVNPlayer.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-isElement' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/core.html#global-method-isElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-isElement' class='name expandable'>isElement</a>( <span class='pre'>Object o</span> )</div><div class='description'><div class='short'>Utility function. ...</div><div class='long'><p>Utility function. Check if the argument is a element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-playerInit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/core.html#global-method-playerInit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-playerInit' class='name expandable'>playerInit</a>( <span class='pre'>Object player, Object playerModule</span> )</div><div class='description'><div class='short'>Initialization that is common across player modules (meaning flash/html5). ...</div><div class='long'><p>Initialization that is common across player modules (meaning flash/html5).\nThis is here mostly to keep it out of the constructor.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>player</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>playerModule</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","component":false,"aliases":{},"uses":[],"superclasses":[],"name":"global","mixedInto":[],"subclasses":[]});